[tool.black]
line-length = 80
target-version = [
  "py37",
  "py38",
  "py39",
  "py310",
  "py311",
]
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  site-packages
  | test/cpp/naming/resolver_component_tests_runner.py  # AUTO-GENERATED
  # AUTO-GENERATED from a template:
  | grpc_version.py
  | python_version.py
  | src/python/grpcio/grpc_core_dependencies.py
  | src/python/grpcio/grpc/_grpcio_metadata.py
  # AUTO-GENERATED BY make_grpcio_tools.py
  | tools/distrib/python/grpcio_tools/protoc_lib_deps.py
  # AUTO-GENERATED BY make_grpcio_observability.py
  | src/python/grpcio_observability/observability_lib_deps.py
  | .*_pb2.py  # autogenerated Protocol Buffer files
  | .*_pb2_grpc.py  # autogenerated Protocol Buffer gRPC files
  # AUTO-GENERATED By tools/distrib/python/xds_protos/build.py
  | tools/distrib/python/xds_protos/.*
)
'''

[tool.isort]
profile = "black"
line_length = 80
src_paths = [
    "examples/python/data_transmission",
    "examples/python/async_streaming",
    "src/python/grpcio_tests",
    "tools/run_tests",
]
known_first_party = [
    "examples",
    "src",
]
known_third_party = ["grpc"]
skip_glob = [
    "*/third_party/*",
    "*/env/*",
    "*pb2*.py",
    "*pb2*.pyi",
    "**/site-packages/**/*",
    "tools/distrib/python/xds_protos/*",
]
single_line_exclusions = ["typing"]
force_single_line = true
force_sort_within_sections = true

# Setup settings for Pytype
[tool.pytype]

inputs = [
  "src/python/grpcio/grpc",
]
exclude = [
  "**/*_pb2.py",
  "src/python/grpcio/grpc/framework",
  "src/python/grpcio/grpc/aio",
  "src/python/grpcio/grpc/beta",
  "src/python/grpcio/grpc/__init__.py",
  "src/python/grpcio/grpc/_simple_stubs.py",
]

disable = [
  "import-error",
  "module-attr",
  "attribute-error",
]

jobs = 'auto'

strict_import = true
keep_going = true

[tool.ruff]
# See https://docs.astral.sh/ruff/configuration/
# For a full list of supported rules, see https://docs.astral.sh/ruff/rules/
# For a full list of options, see https://docs.astral.sh/ruff/settings/

line-length = 100
target-version = "py39"

[tool.ruff.lint]
ignore = [
  "FA100", # Checks for missing from __future__ import annotations
  # imports upon detecting type annotations that can be written more succinctly under PEP 563.

  "TD003", # TD003 Missing issue link for this TODO
  "FIX002", # Checks for "TODO" comments.
  "FIX004", # Checks for "HACK" comments.

  "ANN401", # Checks that function arguments are annotated with a more specific type than Any.

  "S105", # Checks for potential uses of hardcoded passwords in strings.

  "BLE001", # Checks for except clauses that catch all exceptions. This includes bare except, except BaseException and except Exception.

  "PLR0913", # Checks for function definitions that include too many arguments.
  "PERF203", # Checks for uses of except handling via try-except within for and while loops.

  "SLF001", # Checks for accesses on "private" class members.

  "I001", # De-duplicates, groups, and sorts imports based on the provided isort settings.
  # This conflicts with isort

  "TRY400", # Checks for uses of logging.error instead of logging.exception when logging an exception.
]

# This is to suppress
# https://docs.astral.sh/ruff/rules/non-pep585-annotation/
# https://docs.astral.sh/ruff/rules/non-pep604-annotation-union/#non-pep604-annotation-union-up007
pyupgrade.keep-runtime-typing = true

# Select all rules by default, and then ignore the ones we don't want.
# This is a good way to stay up-to-date with new rules in ruff.
select = ["ALL"]

# Allow unused variables that match these patterns.
dummy-variable-rgx = "^(_+|ignored_)"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with 4 spaces.
indent-style = "space"
